# Used by voltron.py
# Comments start with hash , but there are 3 exceptions : #include #ifdef #endif 
# First 3 lines are mandatory : source_path output_header and namespace
# Then they have to be followed by [HEADER] [SYSTEM_LIBRARIES] and then [INCLUSIONS]
# All inclusions in your source files will be ignored. Therefore SYSTEM_LIBRARIES shall have all you need.
source_path=../include/
output_header=memlive.h
# Namespace is optional / you can leave it as blank
namespace=memlive
####################################################
[HEADER]
/*
	MEMLIVE 1.0.3

	MIT License

	Copyright (c) 2024 Akin Ocal

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.
*/
####################################################
[SYSTEM_LIBRARIES]
# THE PARTS BELOW WILL BE COPIED AS IS TO THE BEGINNING OF THE GENERATED FILE
####################################################
// STD C
#include <cstddef>
#include <cstdio>
#include <cstdlib>
#include <cstdint>
#include <cassert>
#include <malloc.h>
#include <new>
// CPU INTRINSICS
#include <immintrin.h>
#if defined(_MSC_VER)
#include <intrin.h>
#elif defined(__GNUC__)
#include <emmintrin.h>
#endif
// STD
#include <string>
#include <string_view>
#include <array>
#include <vector>
#include <unordered_map>
#include <thread>
#include <atomic>
#include <iomanip>
#include <memory>
#include <type_traits>
#include <mutex> // For std::lock_guard
#ifdef __linux__
#include <string.h>
#include <csignal>
#include <errno.h>
#include <pthread.h>
#include <sched.h>
#include <unistd.h>
#include <fcntl.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include <netdb.h>
#include <sys/socket.h>
#include <netinet/tcp.h>
#include <sys/epoll.h>
#include <sys/sysinfo.h>
#include <sys/mman.h>
#include <linux/version.h>
#endif
#ifdef _WIN32
#include <Ws2tcpip.h>
// WINDOWS , WE WANT IT AFTER LIVE PROFILER INCLUDES AS WINDOWS.H CAN'T BE INCLUDED BEFORE Ws2tcpip.h
#include <windows.h>
#include <chrono>
#endif
####################################################
[INCLUSIONS]
# LIST OF FILES , ORDER MATTERS AS THEY MAY HAVE INTERNAL DEPENDENCIES :
####################################################
#CHECKS FIRST
compiler/checks.h
cpu/architecture_check.h
os/os_check.h
#THEN THE REST
#COMPILER LAYER
compiler/builtin_functions.h
compiler/hints_hot_code.h
compiler/unused.h
#CPU LAYER
cpu/pause.h
#OS LAYER
os/socket.h
os/epoll.h
os/lock.h
os/thread_utilities.h
os/thread_local_storage.h
#UTILITIES LAYER
utilities/log2_utilities.h
utilities/pow2_utilities.h
utilities/userspace_spinlock.h
utilities/tcp_reactor.h
utilities/http_cpr_reactor.h
#
profiler.h